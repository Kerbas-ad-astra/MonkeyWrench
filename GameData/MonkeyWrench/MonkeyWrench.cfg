// MonkeyWrench - Because sometimes subtlety and finesse just won't do.
// v0.1.7
// Created by WarrenSchultz
// Creative Commons License
//
// ===============================================================
// MonkeyWrench is designed to allow far more flexibility in mid-mission reconfiguration
// ===============================================================
// New parts via config file adjustments:
// ----------------------------------
//  
// Universal Storage EVA-X Radio add-on for RemoteTech (5km range) and MechJeb 
// Vernier 4-way thrusters, based on B9 RCS block models (Separate part, requires RCSFX, included)
//
//  (All listed mods required for functionality)
//
// ===============================================================
// KAS Grab & Storage support, modifications to existing parts:
// -------------------------------------------
// B9_Aerospace
// DMagic Orbital Science
// Small Hex Cans 
// Infernal Robotics
// + Jumbo sized components
// Interstellar
// KW
// MechJeb
// + Add 1km RemoteTech antenna
// RealChute
// RemoteTech
// StationScience
// SurfaceLights
// SCANsat
// Squad (Additional stock parts, with storage size & balance adjustments)
// + Power generation to launch clamps
// + KAS Node dock capability for 1x and 3x  truss segments
//
// ------------------------------------------------------------------------------------------------------------------------------
// Changes:
// v0.1.7
//		Added support: (Thanks, rabidninjawombat!)
//			Modular Rocket Systems
//			NovaPunch2
//			RLA Stockalike
//			Tantares
//		Drop Pod:
//			FAR compatibility fix for the drop pod. Now properly categorized as shielding the cargo.
//			Increased the size of the airbrakes, and modified them to protect the parachute mounting area on the control adapter.
//			Additional model and texture fixes
// v0.1.6
//		Added cargo drop pod for safe reentry when using FAR/DRE
//		Reorganized art asset structure
// v0.1.5
//		*** Initial Release ***
// 		Increased scale options for most Infernal Robotics parts (Now in Huge Size!)
//  	* Outfitter Maintenance Drone radio
// 		Remove KAS container TweakScale customizations, thanks to the 1.47 release of TweakScale which does the same thing :)
//		Externalized config files for 3rd-party mods
//		* 5m refinery
//		* Reconfigure Universal Storage safety decoupler
//		Updated to ModuleRCSFX v3.2
// * To Do 
//
//
// ===============================================================
// MonkeyWrench Custom Parts
// -------------------------------------------------------

// Universal Storage EVA-X Radio add-on for RemoteTech and MechJeb
@PART[US_R200_EVA_EVAX]:FOR[RemoteTech]{
	%MODULE[ModuleRTAntenna] {
		%IsRTActive = False
		%Mode0OmniRange = 0
		%Mode1OmniRange = 5000
		%EnergyCost = 0.001
		
		%TRANSMITTER {
			%PacketInterval = 0.3
			%PacketSize = 1
			%PacketResourceCost = 3.0
		}
	}
	%MODULE[ModuleSPUPassive] {}
}
@PART[US_R200_EVA_EVAX]:FOR[MechJeb2]{
	MODULE{
		name = MechJebCore
	}
}


// ===================================================================
// KAS adjustments
// ===================================================================

// -------------------------------------------------------
// Squad (Stock) 
// Add power to the launch clamps
@PART[launchClamp1]{
	MODULE
	{
		name = ModuleGenerator
		isAlwaysActive = true
		OUTPUT_RESOURCE
		{
		   name = ElectricCharge
		   rate = 5000
		}	
	}
}
// MonkeyWrench radial attachment mod
@PART[stackPoint1]:FOR[KAS] {
	node_stack_bottom = 0.0, -0.08, 0.0, 0.0, 1.0, 0.0
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.35)
		evaPartDir = (0,0,1)
		storable = True
		storedSize = 5
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
		bayType = MW_GenericNode
		bayNode = bottom
	}
	MODULE
	{
		name = KASModulePartBay
		BAY
		{
			attachNode = bottom
			type = MW_GenericNode
		}
		BAY
		{
			attachNode = top
			type = MW_GenericNode
		}
	}
}
// MonkeyWrench node mods
@PART[trussPiece1x]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 10
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
		bayType = MW_GenericNode
		bayNode = bottom
	}
	MODULE
	{
		name = KASModulePartBay
		BAY
		{
			attachNode = bottom
			type = MW_GenericNode
		}
		BAY
		{
			attachNode = top
			type = MW_GenericNode
		}
	}
}
@PART[trussPiece3x]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 30
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
		bayType = MW_GenericNode
		bayNode = bottom
	}
	MODULE
	{
		name = KASModulePartBay
		BAY
		{
			attachNode = bottom
			type = MW_GenericNode
		}
		BAY
		{
			attachNode = top
			type = MW_GenericNode
		}
	}
}
// Grab & Storage adjustments only
@PART[dockingPort1]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 30
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[dockingPort2]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 50
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[dockingPort3]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 25
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[dockingPortLarge]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = False
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[GooExperiment]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 14
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[ksp_r_largeBatteryPack]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 25
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[landingLeg1]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 16
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[miniLandingLeg]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize =8
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[parachuteSingle]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 10
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[parachuteDrogue]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 10
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[probeCoreCube]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 5
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[probeCoreOcto2]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 2
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[microEngine]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 10
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[radialDecoupler]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 16
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[radialDecoupler1-2]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 16
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[radialDecoupler2]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 16
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[roverWheel1]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 10
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[sepMotor1]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 3
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[SmallGearBay]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 6
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[smallHardpoint]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 5
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[structuralIBeam1]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 240
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[structuralIBeam2]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 80
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[structuralIBeam3]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 40
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[structuralPanel1]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 40
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[structuralPanel2]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 160
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[structuralPylon]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 12
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[toroidalFuelTank]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 8
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[vernierEngine]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 6
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
@PART[wheelMed]:FOR[KAS] {
	MODULE
	{
		name = KASModuleGrab
		evaPartPos = (0.0, 0.0, -0.15)
		evaPartDir = (0,0,-1)
		storable = True
		storedSize = 50
		attachOnPart = True
		attachOnEva = False
		attachOnStatic = False
	}
}
// END